asyncapi: 2.0.0

info:
  title: Syntropy Websockets API
  version: '1.0.0'
  description: |
    Syntropy WebSockets API allows to connect with Syntropy controller and get node configuration updates and return required info to controller.

    ### General Rules

    - Agent version must be valid semver https://semver.org/.
    - All messages sent and received via WebSockets are encoded in JSON format

    ### HTTP request headers when connecting to controller websocket.
      ```
      {
        "Authorization": "AGENT_TOKEN",
        "X-DeviceId": "Unique device ID.",
        "X-DeviceName": "User friendly human readable device name.",
        "X-DeviceIp": "Host machine public ip",
        "X-AgentType": "'Linux' | 'macOS' | 'Windows'",
        "X-AgentVersion": "Agent software version. Semantic Versioning (x.x.x)",
      }
      ```
servers:
  prod:
    url: controller-prod-platform-agents.syntropystack.com
    protocol: wss
    description: |
      Always stable production server for agents . Authentication token has to be created at https://platform.syntropystack.com
  devel:
    url: controller-devel-platform-agents.syntropystack.com
    protocol: wss
    description: |
      Always stable Development server for agents. Authentication token has to be created at https://platform-devel.syntropystack.com
  sandbox:
    url: controller-sandbox-platform-agents.syntropystack.com
    protocol: wss
    description: |
      Sometimes Stable Sandbox server for agents. Authentication token has to be created at https://platform-sandbox.syntropystack.com

channels:
  /:
    subscribe:
      description: Receive messages from the controller
      message:
        oneOf:
          - $ref: '#/components/messages/GET_INFO_CTA'
          - $ref: '#/components/messages/CONFIG_INFO_CTA'
          - $ref: '#/components/messages/AUTO_PING_CTA'
          - $ref: '#/components/messages/WG_CONF_CTA'

    publish:
      description: Send messeges to the controller
      message:
        oneOf:
          - $ref: '#/components/messages/GET_INFO_ATC'
          - $ref: '#/components/messages/CONFIG_INFO_ATC'
          - $ref: '#/components/messages/AUTO_PING_ATC'
          - $ref: '#/components/messages/IFACES_PEERS_BW_DATA_ATC'
          - $ref: '#/components/messages/IFACES_BW_DATA_ATC'
          - $ref: '#/components/messages/IFACES_PEERS_ACTIVE_DATA_ATC'
          - $ref: '#/components/messages/LOGGER_ATC'
          - $ref: '#/components/messages/NETWORK_INFO_ATC'
          - $ref: '#/components/messages/CONTAINER_INFO_ATC'
          - $ref: '#/components/messages/HW_SERVICE_INFO_ATC'
          - $ref: '#/components/messages/KUBERNETES_SERVICE_INFO_ATC'


components:
  messages:
    AUTO_PING_CTA:
      description: Controller sets list of hosts for platform agent to ping and repeat interval in seconds. Platform agent respons periodically with pinging information.
      payload:
        $ref: '#/components/schemas/AUTO_PING_CTA'
      examples:
        - payload:
            id: nEsBfD773UlafZnf
            type: AUTO_PING
            data:
              ips:
                - 23.95.220.138
                - 94.237.29.266
                - 173.104.147.220
              interval: 60
              response_limit: 5
        - payload:
            id: nEsBfD773UlafZ12
            type: AUTO_PING
            data:
              hosts:
                -
              interval: 60
              response_limit: 5

    AUTO_PING_ATC:
      description: Controller sets list of hosts for platform agent to ping and repeat interval in seconds. Platform agent respons periodically with pinging information.
      payload:
        $ref: '#/components/schemas/AUTO_PING_ATC'

    GET_INFO_CTA:
      summary: Event for getting essential info about endpoint.
      description: Event is triggered when platform agent establishes connection with controller. Controller requests platform agent for agent's metadata such as its server provider, category, location, user specified tags, available services (entire list) in agent network. Controller accepts docker_* prefixed keys for compatibility.
      payload:
        $ref: '#/components/schemas/GET_INFO_CTA'
      x-response:
        $ref: '#/components/schemas/GET_INFO_ATC'
      examples:
        - payload:
            id: nEsBfD773UlafZ12
            type: GET_INFO
            data: {}

    GET_INFO_ATC:
      summary: Event for getting essential info about endpoint.
      description: Event is triggered when platform agent establishes connection with controller. Controller requests platform agent for agent's metadata such as its server provider, category, location, user specified tags, available services (entire list) in agent network. Controller accepts docker_* prefixed keys for compatibility.
      payload:
        $ref: '#/components/schemas/GET_INFO_ATC'
      examples:
        - payload:
            id: 4QpCCN4NDhwAGi1X
            executed_at: '2021-09-14T23:21:50.631912'
            type: GET_INFO
            data:
              external_ip: 80.208.227.130
              network_info:
                - agent_network_id: b1fa1f0bdc38eb1862e1fcdcdcf2f26883c2f63473fe57f87ebe08ad48366200
                  agent_network_name: bridge
                  agent_network_subnets:
                    - 172.17.0.0/16
              agent_name: 2yfq.l.time4vps.cloud
              agent_provider:
              agent_category:
              service_status: false
              agent_tags: [ ]
              network_ids: [ ]
              container_info: [ ]
              location_lat:
              location_lon:


    CONFIG_INFO_CTA:
      description: Event is triggered when platform agent establishes connection with controller. Controller sends entire configuration dump to platform agent.
      payload:
        $ref: '#/components/schemas/CONFIG_INFO_CTA'
      x-response:
        $ref: '#/components/messages/CONFIG_INFO_ATC'
      examples:
        - payload:
            id: Asa05ML1102HSJVl
            type: CONFIG_INFO
            data:
              agent_id: 1664
              interfaces:
                -
                  label: PUBLIC
                  private_ip: 10.69.0.146
                  public_key: RzaBT6fXJime+KEFJKkWrozumOEDPpZhJaHWPZmerAA=
                  port: 35524
                  peers:
                    -
                      public_key: c1/1GkBsq+MCDdiXFrfjLnXI+H7oGvDQs0kfn/gmFkI=
                      private_ip: 10.69.100.23
                      public_ip: 94.251.23.158
                      port: 0
                      connection_id: 1025617
                      connection_group_id: 75582
                      agent_id: 6172
                      services:
                        -
                          ip: 172.20.0.0/26
                          name: service_Name
                          ports:
                            tcp:
                              - 1234
                              - 43344
                            udp:
                              - 23543
                      action:
                        enum:
                          - ADD
                          - DEL

    CONFIG_INFO_ATC:
      summary: CONFIG_INFO_ATC is a response to CONFIG_INFO_CTA message
      description: Platform agents sends this event to controller when it wants to update configuration data, i.e. to change configured interface public key due to unrecoverable loss of data on platform agents side.
      payload:
        $ref: '#/components/schemas/CONFIG_INFO_ATC'
      examples:
        - payload:
            id: 0OEqrxBRyAExh04b
            executed_at: "2021-08-04T11:18:38.319935"
            type: CONFIG_INFO_ATC
            data:
              -
                fn: create_interface
                data:
                  public_key: O39YgbELLp80K2G5D/xZjcM0gZcRURW1LCWNc5FaO3I=
                  listen_port: 49152
                  ifname: SYNTROPY_PUBLIC
                  internal_ip: 10.69.14.97
                  status: 0
              -
                fn: create_interface
                data:
                  public_key: J7Dt8IZ3arBUSkHWTJW5WUPf3cpoZRU+qSYVS+eqwAI=
                  listen_port: 49156
                  ifname: SYNTROPY_SDN1
                  internal_ip: 10.69.14.98
              -
                fn: create_interface
                data:
                  public_key: 0GiDp4uyu548ExsxCxV8MMDSToh49jYy8Xm9igM15n0=
                  listen_port: 49153
                  ifname: SYNTROPY_SDN2
                  internal_ip: 10.69.14.99
              -
                fn: create_interface
                data:
                  public_key: 2sw+YfjZUVQEPECtfqKtvaNvJBpC+ysQRHD/zw4Dcg0=
                  listen_port: 49154
                  ifname: SYNTROPY_SDN3
                  internal_ip: 10.69.14.100
    WG_CONF_CTA:
      description: Controller sends platform agent configuration commands, which should be executed in platform agent, i.e. to create interface, to add peer, to delete interface, to delete peer. When adding interface, controller can pick port, or agent can respond with assigned one.
      payload:
        $ref: '#/components/schemas/WG_CONF_CTA'
      examples:
        - payload:
            id: Asa05ML1102HSJVl
            type: WG_CONF_CTA
            data:
              -
                fn: add_peer
                args:
                  allowed_ips:
                    - 10.69.10.93/32
                  endpoint_ipv4: 94.251.23.158
                  endpoint_port: 0
                  ifname: SYNTROPY_PUBLIC
                  public_key: c1/1GkBsq+MCDdiXFrfjLnXI+H7oGvDQs0kfn/gmFkI=
                  gw_ipv4: 10.69.0.47
                metadata:
                  device_id: 292:00329-10280-00000-AA017
                  device_name: Example
                  device_public_ipv4: 94.251.23.158
                  connection_id: 1025617
                  connection_group_id: 75582
                  agent_id: 6172
                  link_tag: PUBLIC
                  allowed_ips_info:
                    agent_service_name: service_Name
                    agent_service_tcp_ports:
                      - 45444
                    agent_service_udp_ports:
                    agent_service_subnet_ip: 172.20.0.0/26
        - payload:
            id: Asa05ML1102HSJVl
            type: WG_CONF_CTA
            data:
              -
                fn: remove_peer
                args:
                  ifname: SYNTROPY_PUBLIC
                  public_key: KaCq7nTViC9rhPc21ky92H7iTldGF76m3hrcSR4UdUc=
                  allowed_ips:
                    - 10.69.10.86/32
              -
                fn: remove_peer
                ifname: SYNTROPY_SDN1
                public_key: AxB/JKQ9aPRgfEA5zI00jX4aZzfxz8LwTKrYaN0OkjI=
                allowed_ips:
                 - 10.69.10.86/32

    IFACES_PEERS_BW_DATA_ATC:
      description: Platform agent periodically sends wireguard configured interfaces peers bandwith data (bandwith of one particular peer via particular interface). Platform agent sends data every 10 seconds. If there is nothing to report, platform agent does not send anything.
      payload:
        $ref: '#/components/schemas/IFACES_PEERS_BW_DATA_ATC'
      examples:
        - payload:
            id: "-"
            executed_at: "2021-09-08T12:22:01.248033"
            type: IFACES_PEERS_BW_DATA_ATC
            data:
              - iface: SYNTROPY_PUBLIC
                iface_public_key: nctTdgN8znYkyUvfeUmaPv7DxmTd3rfo+usC6dImaRQ=
                peers:
                  - ifname: SYNTROPY_PUBLIC
                    public_key: c1/1GkBsq+MCDdiXFrfjLnXI+H7oGvDQs0kfn/gmFkI=
                    allowed_ips:
                      - 10.69.10.93/32
                    last_handshake: '2021-09-08T03:35:52'
                    keep_alive_interval: 15
                    rx_bytes: 308
                    tx_bytes: 888380
                    timestamp: 1631103713.179484
                    internal_ip: 10.69.10.93
                    latency_ms:
                    packet_loss: 1
                    rx_speed_mbps: 0
                    tx_speed_mbps: -2.2794318546905317e-05
                    status: OFFLINE
                    status_reason: Packet loss 100%
              - iface: SYNTROPY_SDN1
                iface_public_key: gwEcTlpb1G5lZbITi12TketrWs8i3mcpImQ3FE0+fxU=
                peers:
                  - ifname: SYNTROPY_SDN1
                    public_key: tkjx2fMmLqnK2f/iSquNZdBKOObeyC2+kSWCCHBXcxk=
                    allowed_ips:
                    - 10.69.5.158/32
                    last_handshake: '2021-08-18T07:19:24'
                    keep_alive_interval: 15
                    rx_bytes: 372556
                    tx_bytes: 417812
                    timestamp: 1629271224.722649
                    internal_ip: 10.69.5.158
                    status: CONNECTED
                    latency_ms: 188.1084442138672
                    packet_loss: 0
                    rx_speed_mbps: 0.00015519337514969392
                    tx_speed_mbps: -0.00015466370492734
              - iface: SYNTROPY_SDN2
                iface_public_key: Vb6584v7UAwT1T0XLwg/hd/OzvDWh0/47zNkCQERmDo=
                peers:
                  - ifname: SYNTROPY_SDN2
                    public_key: sfWquyQ/BDva7BWPegKHDC4HUhy+VcEfRTA6mX8fAyg=
                    allowed_ips:
                    - 10.69.5.159/32
                    last_handshake: '2021-08-18T07:19:24'
                    keep_alive_interval: 15
                    rx_bytes: 372556
                    tx_bytes: 417516
                    timestamp: 1629271224.728945
                    internal_ip: 10.69.5.159
                    status: CONNECTED
                    latency_ms: 185.84465980529785
                    packet_loss: 0
                    rx_speed_mbps: 0.00015976386728270547
                    tx_speed_mbps: -0.00015618854658926737
              - iface: SYNTROPY_SDN3
                iface_public_key: oIGZCz9Dazl1caNczHkn82jVcIWQxfk7a3kEoVRT7Hc=
                peers: [ ]

    IFACES_BW_DATA_ATC:
      description: Platform agent periodically sends wireguard configured interfaces bandwith data (entire bandwidth passed via given interface). Platform agent sends data every 10 seconds. If there is nothing to report, platform agent does not send anything.
      payload:
        $ref: '#/components/schemas/IFACES_BW_DATA_ATC'

    IFACES_PEERS_ACTIVE_DATA_ATC:
      description: Platform agent sends information when current ACTIVE route changes.
      payload:
        $ref: '#/components/schemas/IFACES_PEERS_ACTIVE_DATA_ATC'

    LOGGER_ATC:
      description: Platform agent sends nicely formatted log data to controller. This data is later redirected to platform agents index for users to consume.
      payload:
        $ref: '#/components/schemas/LOGGER_ATC'

    NETWORK_INFO_ATC:
      description: This event is triggered when platform agent network changes. Platform agent sends entire list of available services and their metadata.
      payload:
        $ref: '#/components/schemas/NETWORK_INFO_ATC'

    CONTAINER_INFO_ATC:
      description: This event is triggered when platform agent active docker containers changes. Platform agent sends entire list of available services and their metadata.
      payload:
        $ref: '#/components/schemas/CONTAINER_INFO_ATC'

    HW_SERVICE_INFO_ATC:
      description: This event is triggered when platform agent host hw network changes. Platform agent sends entire list of available services and their metadata.
      payload:
        $ref: '#/components/schemas/HW_SERVICE_INFO_ATC'

    KUBERNETES_SERVICE_INFO_ATC:
      description: This event is triggered when services statuses changes in kubernes cluster. Platform agent sends entire list of available services and their metadata.
      payload:
        $ref: '#/components/schemas/KUBERNETES_SERVICE_INFO_ATC'

    WG_ROUTE_STATUS:
      description: Platform agent sends information about route addition. Confirms successes and failures.
      payload:
        $ref: '#/components/schemas/wg_route_status'
      examples:
        - payload:
            connectionID: 8628615390848610000
            event: systemStatus
            status: online
            version: 1.0.0

  schemas:
    AUTO_PING_CTA:
      type: object
      properties:
        type:
          type: string
          const: AUTO_PING
        data:
          type: array
          description: Array of ips.
          items:
            type: string
            description: Array of ip addresses agent should ping.
      required:
          - type
          - data
    AUTO_PING_ATC:
      type: object
      properties:
        type:
          type: string
          const: AUTO_PING
        data:
          type: array
          description: Array of ips.
          items:
            description: Array of ip addresses should ping.
            type: object
            properties:
              ip:
                type: string
                description: Ip address in string format.
              latency_ms:
                type: integer
              packet_loss:
                type: number
    GET_INFO_CTA:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
        type:
          type: string
          const: GET_INFO
        data:
          type: object
    GET_INFO_ATC:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          const: GET_INFO
        data:
          type: object
          properties:
            agent_provider:
              type: integer
              description: Agent provider id (https://docs.syntropystack.com/docs/syntropy-agent-variables#syntropy-provider).
            service_status:
              type: boolean
              description: Status whether services are enabled by default or not.
            agent_tags:
              type: array
              description: Array of tags.
              items:
                type: string
                description: Tag in string format.
            external_ip:
              type: string
              description: Agent host public ip.
            network_info:
              type: array
              description: Array of docker network objects.
              items:
                description: Docker network object.
                type: object
                properties:
                  agent_network_id:
                    type: string
                    description: unique id of docker network.
                  agent_network_name:
                    type: string
                  agent_network_subnets:
                    type: array
                    description: Subnets that current network owns.
                    items:
                      type: string
            container_info:
              $ref: '#/components/schemas/container_info'
          required:
            - service_status
      required:
        - id
        - type

    CONFIG_INFO_CTA:
      type: object
      required:
        - id
        - type
        - data
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
        type:
          type: string
          const: CONFIG_INFO_CTA
        data:
          type: object
          required:
            - agent_id
            - network
          properties:
             agent_id:
               type: string
             interfaces:
               type: array
               items:
                - $ref: '#/components/schemas/interface'
    CONFIG_INFO_ATC:
      type: object
      description: Need to send only if interfaces updated compared to CONFIG_INFO_CTA.
      required:
        - id
        - type
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
        type:
          type: string
          const: CONFIG_INFO_ATC
        data:
          type: array
          description: List of resulting executed VPN commands. (create_interface only atm). Need to change only if public_key/port differs from CONFIG_INFO_CTA.
          items:
            type: object
            properties:
              fn:
                type: string
                description: Executed command.
              data:
                type: object
                description: Interface info
                properties:
                  ifname:
                    type: string
                  public_key:
                    $ref: '#/components/schemas/public_key'
                  port:
                    $ref: '#/components/schemas/port'
                  internal_ip:
                    $ref: '#/components/schemas/internal_ip'
    WG_CONF_CTA:
      type: object
      required:
        - id
        - type
        - data
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
        type:
          type: string
          const: WG_CONF_CTA
        data:
          type: array
          description: List of wireguard configration commands
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/create_interface'
              - $ref: '#/components/schemas/remove_interface'
              - $ref: '#/components/schemas/add_peer'
              - $ref: '#/components/schemas/remove_peer'


    IFACES_BW_DATA_ATC:
      type: object
      required:
        - id
        - type
        - data
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
          default: "-"
        type:
          type: string
          const: IFACES_BW_DATA_ATC
        data:
          type: array
          description: List of interfaces with BW data
          items:
            type: object
            properties:
              iface:
                type: string
              rx_speed_mbps:
                $ref: '#/components/schemas/rx_speed_mbps'
              tx_speed_mbps:
                $ref: '#/components/schemas/tx_speed_mbps'
              tx_dropped:
                type: integer
              rx_dropped:
                type: integer
              tx_errors:
                type: integer
              rx_errors:
                type: integer
              tx_packets:
                type: integer
              rx_packets:
                type: integer
              interval:
                type: integer

    IFACES_PEERS_BW_DATA_ATC:
      type: object
      required:
        - id
        - type
        - data
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
          default: "-"
        type:
          type: string
          const: IFACES_PEERS_BW_DATA_ATC
        data:
          type: array
          description: List of interfaces with analytic peers data.
          items:
            type: object
            required:
              - iface
              - iface_public_key
            properties:
              iface:
                type: string
              iface_public_key:
                type: string
              peers:
                type: array
                items:
                  type: object
                  required:
                    - public_key
                    - internal_ip
                    - status
                  properties:
                    public_key:
                      $ref: '#/components/schemas/public_key'
                    allowed_ips:
                      $ref: '#/components/schemas/allowed_ips'
                    internal_ip:
                      $ref: '#/components/schemas/internal_ip'
                    latency_ms:
                      $ref: '#/components/schemas/latency_ms'
                    packet_loss:
                      $ref: '#/components/schemas/packet_loss'
                    status:
                      $ref: '#/components/schemas/peer_status'
                    rx_bytes:
                      $ref: '#/components/schemas/rx_bytes'
                    tx_bytes:
                      $ref: '#/components/schemas/tx_bytes'
                    tx_speed_mbps:
                      $ref: '#/components/schemas/tx_speed_mbps'
                    rx_speed_mbps:
                      $ref: '#/components/schemas/rx_speed_mbps'
                    connection_id:
                      $ref: '#/components/schemas/connection_id'
                    last_handshake:
                      type: string
                    keep_alive_interval:
                      type: integer


    IFACES_PEERS_ACTIVE_DATA_ATC:
      type: object
      required:
        - id
        - type
        - data
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
          default: "-"
        type:
          type: string
          const: IFACES_PEERS_ACTIVE_DATA_ATC
        data:
          type: array
          description: List of peers connections that became active after rerouting event.
          items:
            type: object
            required:
              - connection_id
              - timestamp
            properties:
              connection_id:
                $ref: '#/components/schemas/connection_id'
              timestamp:
                type: string


    LOGGER_ATC:
      type: object
      required:
        - id
        - type
        - data
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
          default: "-"
        type:
          type: string
          const: LOGGER_ATC
        data:
          type: object
          required:
            - severity
            - message
          properties:
            severity:
              type: string
            message:
              type: string


    NETWORK_INFO_ATC:
      type: object
      required:
        - id
        - type
        - data
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
          default: "-"
        type:
          type: string
          const: NETWORK_INFO_ATC
        data:
          type: array
          items:
            type: object
            required:
              - docker_network_id
              - docker_network_name
              - docker_network_subnets
            properties:
              docker_network_id:
                type: string
              docker_network_name:
                type: string
              docker_network_subnets:
                $ref: '#/components/schemas/subnets'

    CONTAINER_INFO_ATC:
      type: object
      required:
        - id
        - type
        - data
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
          default: "-"
        type:
          type: string
          const: CONTAINER_INFO_ATC
        data:
          type: object
          required:
            - container_info
          properties:
            container_info:
              $ref: '#/components/schemas/container_info'

    HW_SERVICE_INFO_ATC:
      type: object
      required:
        - id
        - type
        - data
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
          default: "-"
        type:
          type: string
          const: HW_SERVICE_INFO_ATC
        data:
          type: array
          items:
            type: object
            required:
              - agent_network_subnets
              - agent_network_iface
              - agent_network_ports
            properties:
              agent_network_subnets:
                $ref: '#/components/schemas/subnets'
              agent_network_iface:
                type: string
              agent_network_ports:
                $ref: '#/components/schemas/service_ports'

    KUBERNETES_SERVICE_INFO_ATC:
      type: object
      required:
        - id
        - type
        - data
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
          default: "-"
        type:
          type: string
          const: KUBERNETES_SERVICE_INFO_ATC
        data:
          type: array
          items:
            type: object
            required:
              - agent_service_subnets
              - agent_service_name
              - agent_service_ports
            properties:
              agent_service_subnets:
                $ref: '#/components/schemas/subnets'
              agent_service_name:
                type: string
              agent_service_ports:
                $ref: '#/components/schemas/service_ports'

    create_interface:
      type: object
      required:
        - fn
        - args
      properties:
        fn:
          type: string
          const: create_interface
        args:
          $ref: '#/components/schemas/interface'
        metadata:
          $ref: '#/components/schemas/interface_metadata'
      description: Wireguard interface creation.

    remove_interface:
      type: object
      required:
        - fn
        - args
      properties:
        fn:
          type: string
          const: remove_interface
        args:
          type: object
          required:
            - ifname
          properties:
            ifname:
              type: string
      description: Wireguard interface remove.

    add_peer:
      type: object
      required:
        - fn
        - args
      properties:
        fn:
          type: string
          const: add_peer
        args:
          $ref: '#/components/schemas/peer'
      description: Wireguard add peer.

    remove_peer:
      type: object
      required:
        - fn
        - args
      properties:
        fn:
          type: string
          const: remove_peer
        args:
          type: object
          required:
            - ifname
          properties:
            ifname:
              type: string
            public_key:
              $ref: '#/components/schemas/public_key'
            allowed_ips:
              $ref: '#/components/schemas/allowed_ips'
      description: Wireguard peer remove.


    interface:
      type: object
      required:
        - internal_ip
        - public_key
      properties:
        label:
          $ref: '#/components/schemas/label'
        internal_ip:
          $ref: '#/components/schemas/internal_ip'
        public_key:
          $ref: '#/components/schemas/public_key'
        port:
          $ref: '#/components/schemas/port'
        peers:
          type: array
          items:
            - $ref: '#/components/schemas/peer'
      description: Wireguard interface info.

    peer:
      type: object
      required:
        - ifname
        - public_key
        - allowed_ips
        - gw_ipv4
      properties:
        ifname:
          type: string
        public_key:
          $ref: '#/components/schemas/public_key'
        private_ip:
          type: string
        public_ip:
          type: string
        port:
          $ref: '#/components/schemas/port'
        connection_id:
          $ref: '#/components/schemas/connection_id'
        connection_group_id:
          $ref: '#/components/schemas/connection_group_id'
        agent_id:
          type: string
        services:
          type: array
          items:
            type: object
            properties:
              ip:
                $ref: '#/components/schemas/ip'
              name:
                type: string
              ports:
                $ref: '#/components/schemas/service_ports'
              agent_service_udp_ports:
                $ref: '#/components/schemas/udp_ports'
        action:
          $ref: '#/components/schemas/peer_action'
      description: Peer fields.

    interface_metadata:
      type: object
      properties:
        connection_id:
          $ref: '#/components/schemas/connection_id'
      description: Interface Metadata

    peer_metadata:
      type: object
      properties:
        device_id:
          type: string
        device_name:
          type: string
        device_public_ipv4:
          type: string
        connection_id:
          $ref: '#/components/schemas/connection_id'
        connection_group_id:
          $ref: '#/components/schemas/connection_group_id'
        allowed_ips_info:
          type: array
          items:
            type: object
            properties:
              agent_service_name:
                type: string
              agent_service_subnet_ip:
                type: string
              agent_service_tcp_ports:
                $ref: '#/components/schemas/tcp_ports'
              agent_service_udp_ports:
                $ref: '#/components/schemas/udp_ports'
      description: Peer Metadata

    container_info:
      type: array
      description: Array of docker network objects.
      items:
        description: Docker network object.
        type: object
        required:
          - agent_container_id
          - agent_container_name
          - agent_container_state
          - agent_container_networks
          - agent_container_ips
        properties:
          agent_container_id:
            type: string
            description: Unique id of docker container.
          agent_container_name:
            type: string
          agent_container_state:
            type: string
            description: Container state.
            enum:
              - running
              - stopped
          agent_container_uptime:
            type: string
            description: Container uptime.
          agent_container_networks:
            type: array
            description: Networks that container belongs to.
            items:
              type: string
          agent_container_ips:
            type: array
            description: Container ips.
            items:
              type: string
          agent_container_ports:
            $ref: '#/components/schemas/service_ports'

    wg_route_status:
      type: object
      description: Status after adding route to host routing table.
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
          default: "-"
        type:
          type: string
          const: WG_ROUTE_STATUS
        data:
          type: array
          items:
            type: object
            required:
              - connection_group_id
              - statuses
            properties:
              connection_id:
                $ref: '#/components/schemas/connection_id'
              connection_group_id:
                $ref: '#/components/schemas/connection_group_id'
              statuses:
                $ref: '#/components/schemas/route_statuses'

    route_statuses:
      type: array
      description: List of ips.
      items:
        type: object
        required:
          - status
          - ip
        properties:
          status:
            $ref: '#/components/schemas/route_status'
          ip:
            type: string
          msg:
            type: string

    service_ports:
      type: object
      description: Container ips.
      properties:
        udp:
          $ref: '#/components/schemas/udp_ports'
        tcp:
          $ref: '#/components/schemas/tcp_ports'

    udp_ports:
      type: array
      description: List of udp ports.
      items:
        type: integer

    tcp_ports:
      type: array
      description: List of tcp ports.
      items:
        type: integer

    msg_id:
      type: string
      description: Unique ID of message. (response should be sent with same id as request)

    public_key:
      type: string

    label:
      type: string

    internal_ip:
      type: string

    ip:
      type: string

    latency_ms:
      type: string

    packet_loss:
      type: number

    peer_status:
      type: string
      enum:
        - CONNECTED
        - WARNING
        - OFFLINE

    peer_action:
      type: string
      enum:
        - ADD
        - DEL

    route_status:
      type: string
      enum:
        - ERROR
        - OK

    allowed_ips:
      type: array
      description: List of ips.
      items:
        type: string

    port:
      type: integer
      description: Interface listening port.

    rx_bytes:
      type: integer

    tx_bytes:
      type: integer

    tx_speed_mbps:
      type: number

    rx_speed_mbps:
      type: number

    connection_id:
      type: integer

    connection_group_id:
      type: integer

    subnets:
      type: array
      items:
        type: string