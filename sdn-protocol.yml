asyncapi: 2.2.0
info:
  title: Syntropy Websockets API
  version: 2.0.0
  description: >
    Syntropy SGN WebSockets API allows to connect with Syntropy controller and
    get SDN node configuration updates and return required info to controller.


    ### General Rules


    - Agent version must be valid semver https://semver.org/.

    - Agent version higher than 2.x.x should be using v2 protocol.

    - All messages sent and received via WebSockets are encoded in JSON format


    ### HTTP request headers when connecting to controller websocket.
      ```
      {
        "X-Ipv4-Nat11": "Server main interface ip.",
        "X-DeviceName": "User friendly human readable device name.",
        "X-DeviceIp": "Host machine public ip",
        "X-DarpId": "ID Generated by DARP",
        "x-AgentVersion": "Agent software version. Semantic Versioning (x.x.x)",
        "x-KernelVersion": "Host kernel version. Semantic Versioning (x.x.x)",
      }

      ```
    #### On DARP Connection request Agent should check if DARP_ID is whitelisted.
    https://controller-sandbox-server.syntropystack.com/api/agents/darp/whitelist?ip=DARP_ID
servers:
  prod:
    url: controller-prod-agents.syntropystack.com?auth_key=auth_key
    protocol: wss
    description: |
      Always stable production server for agents.
  devel:
    url: controller-devel-agents.syntropystack.com?auth_key=auth_key
    protocol: wss
    description: |
      Always stable Development server for agents.
  sandbox:
    url: controller-sandbox-agents.syntropystack.com?auth_key=auth_key
    protocol: wss
    description: |
      Sometimes Stable Sandbox server for agents.
channels:
  /:
    subscribe:
      description: Receive messages from the controller
      message:
        oneOf:
          - $ref: '#/components/messages/SET_CONFIG (CTA)'
          - $ref: '#/components/messages/UPDATE_CONFIG (CTA)'
    publish:
      description: Send messeges to the controller
      message:
        oneOf:
          - $ref: '#/components/messages/CONFIG_INFO (ATC)'
          - $ref: '#/components/messages/NETWORK_STATISTICS (ATC)'
          - $ref: '#/components/messages/LOGGER (ATC)'
components:
  messages:
    LOGGER (ATC):
      description: >-
        SDN agent sends nicely formatted log data to controller. This data is
        later redirected to sdn agents index for users to consume.
      payload:
        $ref: '#/components/schemas/LOGGER (ATC)'


    GET_SUPPORT_INFO (CTA):
      summary: Event for getting debug info about endpoint.
      payload:
        $ref: '#/components/schemas/SUPPORT_INFO (CTA)'
      x-response:
        $ref: '#/components/schemas/SUPPORT_INFO (ATC)'
      examples:
        - payload:
            id: nEsBfD773UlafZ12
            type: SUPPORT_INFO
            data: {}
    SUPPORT_INFO (ATC):
      summary: Event for getting debug info about endpoint.
      payload:
        $ref: '#/components/schemas/SUPPORT_INFO (ATC)'
    SET_CONFIG (CTA):
      description: >-
        Event is triggered when platform agent establishes connection with
        controller. Controller sends entire configuration dump to platform
        agent.
      payload:
        $ref: '#/components/schemas/SET_CONFIG'
      x-response:
        $ref: '#/components/messages/CONFIG_INFO (ATC)'
    UPDATE_CONFIG (CTA):
      description: >-
        Event is triggered when platform agent updates connection with
        controller. Controller sends only diff configuration dump to platform
        agent.
      x-response:
        $ref: '#/components/messages/CONFIG_INFO (ATC)'
    CONFIG_INFO (ATC):
      summary: CONFIG_INFO (ATC) is a response to SET_CONFIG (CTA) message
      description: >-
        SDN agents sends this event to controller when it wants to update
        configuration data, i.e. to change mappings ports or update darp multiaddresses.
      payload:
        $ref: '#/components/schemas/CONFIG_INFO (ATC)'
    NETWORK_STATISTICS (ATC):
      description: >-
        SDN agent periodically sends endpoints bandwidth data. SDN agent sends data every 30 seconds.
      payload:
        $ref: '#/components/schemas/NETWORK_STATISTICS (ATC)'
      examples:
        - payload:
            id: '-'
            type: NETWORK_STATISTICS
            executed_at: '2022-06-14T10:16:12Z'
            data:
              - port: 4397
                endpoints:
                  - addr: 35.180.69.73
                    port: 42791
                    pkts_ok: 12
                    bytes_ok: 1296
                  - addr: 13.53.39.121
                    port: 42696
                    pkts_ok: 12
                    bytes_ok: 1296
              - port: 4444
                endpoints:
                  - addr: 65.180.69.71
                    port: 44444
                    pkts_ok: 123
                    bytes_ok: 123
                  - addr: 63.53.39.124
                    port: 66666
                    pkts_ok: 125
                    bytes_ok: 1293
  schemas:
    SET_CONFIG:
      type: object
      required:
        - id
        - type
        - data
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
        type:
          type: string
          const: SET_CONFIG
        data:
          type: object
          required:
            - network
          properties:
            unat4_table:
              $ref: '#/components/schemas/unat4_table'
            unat4_mapping:
              type: array
              items:
                - $ref: '#/components/schemas/unat4_mapping'
            settings:
              type: object
              properties:
                auto_ping:
                  $ref: '#/components/schemas/set_auto_ping'
                darp:
                  $ref: '#/components/schemas/set_darp'
    CONFIG_INFO (ATC):
      type: object
      description: Need to send only if ports or bootstrap addresses updated compared to SET_CONFIG (CTA).
      required:
        - id
        - executed_at
        - type
        - data
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
        executed_at:
          $ref: '#/components/schemas/executed_at'
        type:
          type: string
          const: CONFIG_INFO
        data:
          type: object
          properties:
            unat4_mapping:
              type: array
              items:
                - $ref: '#/components/schemas/unat4_mapping'
            settings:
              type: object
              properties:
                darp:
                  $ref: '#/components/schemas/set_darp'
    AUTO_PING (ATC):
      type: object
      properties:
        type:
          type: string
          const: AUTO_PING
        data:
          type: array
          description: Array of ips.
          items:
            description: An array of IP addresses should ping.
            type: object
            properties:
              ip:
                type: string
                description: Ip address in string format.
              latency_ms:
                type: integer
              packet_loss:
                type: number
    LOGGER (ATC):
      type: object
      required:
        - id
        - type
        - data
        - executed_at
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
          default: '-'
        executed_at:
          $ref: '#/components/schemas/executed_at'
        type:
          type: string
          const: LOGGER (ATC)
        data:
          type: object
          required:
            - severity
            - message
          properties:
            severity:
              $ref: '#/components/schemas/severity'
            message:
              type: string
    SUPPORT_INFO (CTA):
      type: object
      required:
        - id
        - type
        - data
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
        type:
          type: string
          const: GET_SUPPORT_INFO
        data:
          type: object
    SUPPORT_INFO (ATC):
      type: object
      required:
        - id
        - executed_at
        - type
        - data
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
        executed_at:
          $ref: '#/components/schemas/executed_at'
        type:
          type: string
          const: SUPPORT_INFO
        data:
          type: array
          items:
            $ref: '#/components/schemas/support_info'
    NETWORK_STATISTICS (ATC):
      type: object
      required:
        - id
        - type
        - data
        - executed_at
      properties:
        id:
          $ref: '#/components/schemas/msg_id'
          default: '-'
        executed_at:
          $ref: '#/components/schemas/executed_at'
        type:
          type: string
          const: NETWORK_STATISTICS
        data:
          type: array
          items:
            type: object
            required:
              - addr
              - endpoints
              - port
              - connection_id
            properties:
              addr:
                $ref: '#/components/schemas/ip_addr'
              port:
                $ref: '#/components/schemas/port'
              connection_id:
                $ref: '#/components/schemas/connection_id'
              endpoints:
                type: array
                items:
                  type: object
                  required:
                    - addr
                    - port
                    - pkts_ok
                    - bytes_ok
                  properties:
                    addr:
                      $ref: '#/components/schemas/ip_addr'
                    port:
                      $ref: '#/components/schemas/port'
                    bytes_ok:
                      $ref: '#/components/schemas/bytes'
                    pkts_ok:
                      $ref: '#/components/schemas/packets'
    set_auto_ping:
      type: object
      required:
        - ips
        - interval
      properties:
        ips:
          type: array
          description: Array of ips.
          items:
            type: string
            description: Array of ip addresses agent should ping.
        interval:
          $ref: '#/components/schemas/interval'
          description: Interval in seconds to ping ips.
    set_darp:
      type: object
      required:
        - multiaddress
      properties:
        multiaddress:
          type: array
          description: Array of multiaddresses.
          items:
            type: string
            description: Array of multiaddress for darp to connect.
    unat4_table:
      type: object
      required:
        - addr
        - action
      properties:
        action:
          $ref: '#/components/schemas/action'
        addr:
          $ref: '#/components/schemas/ip_addr'
    unat4_mapping:
      type: object
      required:
        - action
        - addr
        - port
        - connection_id
      properties:
        connection_id:
          $ref: '#/components/schemas/ip_addr'
        action:
          $ref: '#/components/schemas/action'
        addr:
          $ref: '#/components/schemas/ip_addr'
        port:
          $ref: '#/components/schemas/port'
        endpoints:
          type: array
          items:
            - $ref: '#/components/schemas/endpoints'
    endpoints:
      type: object
      required:
        - addr
        - port
      properties:
        addr:
          $ref: '#/components/schemas/ip_addr'
        port:
          $ref: '#/components/schemas/port'
    support_info:
      description: Status after creating interface
      required:
        - key
        - value
      properties:
        key:
          type: string
        value:
          type: string
    msg_id:
      type: string
      description: Unique ID of message. (response should be sent with same id as request)
    connection_id:
      type: string
    ip_addr:
      type: string
    port:
      type: number
    executed_at:
      type: string
      format: date-time
      description: Datetime ISO8601 format

    bytes:
      type: integer
      format: int64

    packets:
      type: integer
      format: int64

    interval:
      type: integer
    action:
      type: string
      enum:
        - SET
        - DEL

    severity:
      type: string
      enum:
        - DEBUG
        - INFO
        - WARNING
        - ERROR
